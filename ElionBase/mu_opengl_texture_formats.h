#ifndef __MU_OPENGL_TEXTURE_FORMATS_H__
#define __MU_OPENGL_TEXTURE_FORMATS_H__

#pragma once

static const GLenum OpenGLFormats[ETextureFormatMax] =
{
	GL_R8,
	GL_R8_SNORM,
	GL_R8UI,
	GL_R8I,

	GL_RG8,
	GL_RG8_SNORM,
	GL_RG8UI,
	GL_RG8I,

	GL_RGBA8,
	GL_RGBA8_SNORM,
	GL_RGBA8UI,
	GL_RGBA8I,

	GL_R16,
	GL_R16_SNORM,
	GL_R16UI,
	GL_R16I,
	GL_R16F,

	GL_RG16,
	GL_RG16_SNORM,
	GL_RG16UI,
	GL_RG16I,
	GL_RG16F,

	GL_RGBA16,
	GL_RGBA16_SNORM,
	GL_RGBA16UI,
	GL_RGBA16I,
	GL_RGBA16F,

	GL_R32UI,
	GL_R32I,
	GL_R32F,

	GL_RG32UI,
	GL_RG32I,
	GL_RG32F,

	GL_RGB32UI,
	GL_RGB32I,
	GL_RGB32F,

	GL_RGBA32UI,
	GL_RGBA32I,
	GL_RGBA32F,

	GL_DEPTH_COMPONENT16,
	GL_DEPTH_COMPONENT32F,
};

static const GLenum OpenGLFlatFormats[ETextureFormatMax] =
{
	GL_RED,
	GL_RED,
	GL_RED_INTEGER,
	GL_RED_INTEGER,

	GL_RG,
	GL_RG,
	GL_RG_INTEGER,
	GL_RG_INTEGER,

	GL_RGBA,
	GL_RGBA,
	GL_RGBA_INTEGER,
	GL_RGBA_INTEGER,

	GL_RED,
	GL_RED,
	GL_RED_INTEGER,
	GL_RED_INTEGER,
	GL_RED,

	GL_RG,
	GL_RG,
	GL_RG_INTEGER,
	GL_RG_INTEGER,
	GL_RG,

	GL_RGBA,
	GL_RGBA,
	GL_RGBA_INTEGER,
	GL_RGBA_INTEGER,
	GL_RGBA,

	GL_RED_INTEGER,
	GL_RED_INTEGER,
	GL_RED,

	GL_RG_INTEGER,
	GL_RG_INTEGER,
	GL_RG,

	GL_RGB_INTEGER,
	GL_RGB_INTEGER,
	GL_RGB,

	GL_RGBA_INTEGER,
	GL_RGBA_INTEGER,
	GL_RGBA,

	GL_DEPTH_COMPONENT,
	GL_DEPTH_COMPONENT,
};

static const GLenum OpenGLScalarFormats[ETextureFormatMax] =
{
	GL_UNSIGNED_BYTE,
	GL_BYTE,
	GL_UNSIGNED_BYTE,
	GL_BYTE,

	GL_UNSIGNED_BYTE,
	GL_BYTE,
	GL_UNSIGNED_BYTE,
	GL_BYTE,

	GL_UNSIGNED_BYTE,
	GL_BYTE,
	GL_UNSIGNED_BYTE,
	GL_BYTE,

	GL_UNSIGNED_SHORT,
	GL_SHORT,
	GL_UNSIGNED_SHORT,
	GL_SHORT,
	GL_HALF_FLOAT,

	GL_UNSIGNED_SHORT,
	GL_SHORT,
	GL_UNSIGNED_SHORT,
	GL_SHORT,
	GL_HALF_FLOAT,

	GL_UNSIGNED_SHORT,
	GL_SHORT,
	GL_UNSIGNED_SHORT,
	GL_SHORT,
	GL_HALF_FLOAT,

	GL_UNSIGNED_INT,
	GL_INT,
	GL_FLOAT,

	GL_UNSIGNED_INT,
	GL_INT,
	GL_FLOAT,

	GL_UNSIGNED_INT,
	GL_INT,
	GL_FLOAT,

	GL_UNSIGNED_INT,
	GL_INT,
	GL_FLOAT,

	GL_UNSIGNED_SHORT,
	GL_FLOAT,
};

static const GLenum OpenGLTargetType[EImageViewTypeMax] =
{
	GL_INVALID_ENUM,
#if defined(GL_TEXTURE_1D) && defined(GL_TEXTURE_1D_ARRAY)
	GL_TEXTURE_1D,
	GL_TEXTURE_1D_ARRAY,
#else
	// OpenGL ES doesn't contain GL_TEXTURE_1D or Array define
	GL_TEXTURE_2D,
	GL_TEXTURE_2D_ARRAY,
#endif
	GL_TEXTURE_2D,
	GL_TEXTURE_2D_ARRAY,
	GL_TEXTURE_3D,
	GL_TEXTURE_CUBE_MAP,
};

#if ELION_TEXTURETYPE_FORMAT == ELION_TEXTURETYPE_DDS
static const gli::target GLiTargetType[EImageViewTypeMax] =
{
	gli::TARGET_2D,
	gli::TARGET_1D,
	gli::TARGET_1D_ARRAY,
	gli::TARGET_2D,
	gli::TARGET_2D_ARRAY,
	gli::TARGET_3D,
	gli::TARGET_CUBE,
};
#endif

#endif